name: Django CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  BuildAndTest:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Check python version
        run: |
          python --version

      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1

      - name: Pipenv install dependencies
        run: |
          pipenv install

      - name: Pipenv check dependencies
        run: |
          pipenv graph

      - name: Check pipenv environment
        run: |
          pipenv --version
          pipenv --where
          pipenv --venv

      - name: Django run migration
        run: |
          pipenv run python -m django --version
          pipenv run python manage.py migrate
      - uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: ""
          use-pylint: false
          use-pycodestyle: false
          use-flake8: true
          use-black: false
          use-mypy: false
          use-isort: false
          extra-flake8-options: "--tee --output-file=/github/workspace/flake8.txt"

      - name: Django test
        run: |
          set DJANGO_ENV=dev
          pipenv run python manage.py test

      - name: Download clean repo for SonarQube analysis
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: false

      - name: SonarCloud Scan && Upload
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=sergiuszkotecki
            -Dsonar.projectKey=SergiuszKotecki_petter
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=.
            -Dsonar.test.exclusions=manage.py
            -Dsonar.projectName=petter
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.language=py
            -Dsonar.python.coverage.reportPaths=coverage/xml/*coverage*.xml
            -Dsonar.python.flake8.reportPaths=/github/workspace/flake8.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
