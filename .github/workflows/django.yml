name: Django CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Check python version
        run: |
          python --version

      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1

      - name: Pipenv install dependencies
        run: |
          pipenv install

      - name: Pipenv check dependencies
        run: |
          pipenv graph

      - name: Check pipenv environment
        run: |
          pipenv --version
          pipenv --where
          pipenv --venv

      - name: Django run migration
        run: |
          pipenv run python -m django --version
          pipenv run python manage.py migrate

      - name: Flake8 test
        run: |
          pipenv run python -m flake8

  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: |
          python -m pip install pipenv==2021.11.23

      - name: Pipenv install dependencies
        run: |
          pipenv install

      - name: Flake8
        run: |
          pipenv run python -m flake8 --tee --output-file=/home/runner/work/reports/flake8.txt

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "/home/runner/work/reports/flake8.txt"

      - name: File exists
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: echo All files exists!

      - name: Django test
        run: |
          pipenv run python manage.py test

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "/home/runner/work/reports/coverage.xml"

      - name: File exists
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: echo All files exists!

      - name: Download clean repo for SonarQube analysis
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: false
      - name: SonarCloud Scan && Upload
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "/home/runner/work/reports/flake8.txt"

      - name: File exists
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: echo All files exists!

      - name: Django test
        run: |
          pipenv run python manage.py test

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "/home/runner/work/reports/coverage.xml"

      - name: File exists
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: echo All files exists!


#      - name: Run tests
#        run: |
#          pipenv install
#          pipenv run python manage.py test
#      - uses: actions/checkout@v1
#        with:
#          clean: false
#      - uses: ricardochaves/python-lint@v1.4.0
#        with:
#          python-root-list: ""
#          use-pylint: false
#          use-pycodestyle: false
#          use-flake8: true
#          use-black: false
#          use-mypy: false
#          use-isort: false
#          extra-flake8-options: "--tee --output-file=/github/workspace/flake8.txt"
#
#
#
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          clean: false
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
